# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 2
# RUN: llc --verify-machineinstrs -mtriple=aarch64 -o - %s -run-pass pipeliner -aarch64-enable-pipeliner -pipeliner-mve-cg -mcpu=neoverse-n1 -pipeliner-force-ii=3 | FileCheck %s

# There is no dedicated exit
---
name:            test
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: test
  ; CHECK: bb.0:
  ; CHECK-NEXT:   successors: %bb.1(0x40000000), %bb.3(0x40000000)
  ; CHECK-NEXT:   liveins: $x0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:gpr64sp = COPY $x0
  ; CHECK-NEXT:   [[FMOVD0_:%[0-9]+]]:fpr64 = FMOVD0
  ; CHECK-NEXT:   [[FMOVDi:%[0-9]+]]:fpr64 = FMOVDi 8
  ; CHECK-NEXT:   dead $xzr = SUBSXri [[COPY]], 0, 0, implicit-def $nzcv
  ; CHECK-NEXT:   Bcc 12, %bb.1, implicit $nzcv
  ; CHECK-NEXT:   B %bb.3
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.4(0x80000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   B %bb.4
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.4:
  ; CHECK-NEXT:   successors: %bb.5(0x40000000), %bb.8(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   dead $xzr = SUBSXri [[COPY]], 2, 0, implicit-def $nzcv
  ; CHECK-NEXT:   Bcc 12, %bb.5, implicit $nzcv
  ; CHECK-NEXT:   B %bb.8
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.5:
  ; CHECK-NEXT:   successors: %bb.6(0x80000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[SUBSXri:%[0-9]+]]:gpr64 = nsw SUBSXri [[COPY]], 1, 0, implicit-def $nzcv
  ; CHECK-NEXT:   [[FMADDDrrr:%[0-9]+]]:fpr64 = nofpexcept FMADDDrrr [[FMOVDi]], [[FMOVDi]], [[FMOVDi]], implicit $fpcr
  ; CHECK-NEXT:   [[COPY1:%[0-9]+]]:gpr64all = COPY [[SUBSXri]]
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.6:
  ; CHECK-NEXT:   successors: %bb.6(0x40000000), %bb.7(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[PHI:%[0-9]+]]:gpr64all = PHI %16, %bb.6, [[COPY]], %bb.5
  ; CHECK-NEXT:   [[PHI1:%[0-9]+]]:gpr64 = PHI %18, %bb.6, [[SUBSXri]], %bb.5
  ; CHECK-NEXT:   [[PHI2:%[0-9]+]]:fpr64 = PHI %20, %bb.6, [[FMADDDrrr]], %bb.5
  ; CHECK-NEXT:   [[PHI3:%[0-9]+]]:fpr64 = PHI %22, %bb.6, [[FMOVD0_]], %bb.5
  ; CHECK-NEXT:   [[PHI4:%[0-9]+]]:gpr64sp = PHI %24, %bb.6, [[COPY1]], %bb.5
  ; CHECK-NEXT:   [[SUBSXri1:%[0-9]+]]:gpr64 = nsw SUBSXri [[PHI4]], 1, 0, implicit-def $nzcv
  ; CHECK-NEXT:   [[FMADDDrrr1:%[0-9]+]]:fpr64 = nofpexcept FMADDDrrr [[FMOVDi]], [[FMOVDi]], [[FMOVDi]], implicit $fpcr
  ; CHECK-NEXT:   [[FADDDrr:%[0-9]+]]:fpr64 = nofpexcept FADDDrr [[PHI3]], [[PHI2]], implicit $fpcr
  ; CHECK-NEXT:   [[COPY2:%[0-9]+]]:gpr64sp = COPY [[SUBSXri1]]
  ; CHECK-NEXT:   [[SUBSXri2:%[0-9]+]]:gpr64 = nsw SUBSXri [[COPY2]], 1, 0, implicit-def $nzcv
  ; CHECK-NEXT:   [[FMADDDrrr2:%[0-9]+]]:fpr64 = nofpexcept FMADDDrrr [[FMOVDi]], [[FMOVDi]], [[FMOVDi]], implicit $fpcr
  ; CHECK-NEXT:   [[FADDDrr1:%[0-9]+]]:fpr64 = nofpexcept FADDDrr [[FADDDrr]], [[FMADDDrrr1]], implicit $fpcr
  ; CHECK-NEXT:   [[COPY3:%[0-9]+]]:gpr64all = COPY [[SUBSXri2]]
  ; CHECK-NEXT:   [[COPY4:%[0-9]+]]:gpr64sp = COPY [[SUBSXri2]]
  ; CHECK-NEXT:   dead $xzr = SUBSXri [[COPY4]], 1, 0, implicit-def $nzcv
  ; CHECK-NEXT:   Bcc 12, %bb.6, implicit $nzcv
  ; CHECK-NEXT:   B %bb.7
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.7:
  ; CHECK-NEXT:   successors: %bb.8(0x40000000), %bb.9(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[FADDDrr2:%[0-9]+]]:fpr64 = nofpexcept FADDDrr [[FADDDrr1]], [[FMADDDrrr2]], implicit $fpcr
  ; CHECK-NEXT:   [[COPY5:%[0-9]+]]:gpr64sp = COPY [[SUBSXri2]]
  ; CHECK-NEXT:   dead $xzr = SUBSXri [[COPY5]], 0, 0, implicit-def $nzcv
  ; CHECK-NEXT:   Bcc 12, %bb.8, implicit $nzcv
  ; CHECK-NEXT:   B %bb.9
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.8:
  ; CHECK-NEXT:   successors: %bb.2(0x80000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[PHI5:%[0-9]+]]:gpr64sp = PHI [[COPY]], %bb.4, [[COPY3]], %bb.7
  ; CHECK-NEXT:   [[PHI6:%[0-9]+]]:fpr64 = PHI [[FMOVD0_]], %bb.4, [[FADDDrr2]], %bb.7
  ; CHECK-NEXT:   B %bb.2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.9:
  ; CHECK-NEXT:   successors: %bb.3(0x80000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[PHI7:%[0-9]+]]:fpr64 = PHI %6, %bb.2, [[FADDDrr2]], %bb.7
  ; CHECK-NEXT:   B %bb.3
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2:
  ; CHECK-NEXT:   successors: %bb.2(0x40000000), %bb.9(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[PHI8:%[0-9]+]]:gpr64sp = PHI [[PHI5]], %bb.8, %4, %bb.2
  ; CHECK-NEXT:   [[PHI9:%[0-9]+]]:fpr64 = PHI [[PHI6]], %bb.8, %6, %bb.2
  ; CHECK-NEXT:   [[FMADDDrrr3:%[0-9]+]]:fpr64 = nofpexcept FMADDDrrr [[FMOVDi]], [[FMOVDi]], [[FMOVDi]], implicit $fpcr
  ; CHECK-NEXT:   [[FADDDrr3:%[0-9]+]]:fpr64 = nofpexcept FADDDrr [[PHI9]], [[FMADDDrrr3]], implicit $fpcr
  ; CHECK-NEXT:   [[SUBSXri3:%[0-9]+]]:gpr64 = nsw SUBSXri [[PHI8]], 1, 0, implicit-def $nzcv
  ; CHECK-NEXT:   [[COPY6:%[0-9]+]]:gpr64all = COPY [[SUBSXri3]]
  ; CHECK-NEXT:   Bcc 0, %bb.9, implicit $nzcv
  ; CHECK-NEXT:   B %bb.2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.3:
  ; CHECK-NEXT:   [[PHI10:%[0-9]+]]:fpr64 = PHI [[PHI7]], %bb.9, [[FMOVD0_]], %bb.0
  ; CHECK-NEXT:   $d0 = COPY [[PHI10]]
  ; CHECK-NEXT:   RET_ReallyLR implicit $d0
  bb.0:
    liveins: $x0

    %0:gpr64sp = COPY $x0
    %13:fpr64 = FMOVD0
    %17:fpr64 = FMOVDi 8
    dead $xzr = SUBSXri %0, 0, 0, implicit-def $nzcv
    Bcc 12, %bb.3, implicit $nzcv
    B %bb.2

  bb.3:
    B %bb.1

  bb.1:
    %2:gpr64sp = PHI %0, %bb.3, %7, %bb.1
    %4:fpr64 = PHI %13, %bb.3, %5, %bb.1
    %22:fpr64 = nofpexcept FMADDDrrr %17, %17, %17, implicit $fpcr
    %5:fpr64 = nofpexcept FADDDrr %4, killed %22, implicit $fpcr
    %23:gpr64 = nsw SUBSXri %2, 1, 0, implicit-def $nzcv
    %7:gpr64all = COPY %23
    Bcc 0, %bb.2, implicit $nzcv
    B %bb.1

  bb.2:
    %24:fpr64 = PHI %5, %bb.1, %13, %bb.0
    $d0 = COPY %24
    RET_ReallyLR implicit $d0
...
